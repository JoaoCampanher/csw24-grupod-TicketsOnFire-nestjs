name: Test

on:
  push:
    branches: ["main"]

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy App
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1 

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Install Dependencies
      run: npm install

    - name: Build Application
      run: npm run build

    # Build Docker image
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }} .
    # Tag Docker image for ECR
    - name: Tag Docker image for ECR
      run: |
        docker tag ${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }}
    # Push Docker image to ECR
    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:${{ github.sha }}
  
    - name: Install Serverless Framework
      run: npm install -g serverless
      
    - name: Configure Serverless Credentials
      run: serverless login

    # Package the application using Serverless Framework
    - name: Serverless Package
      run: serverless package --stage production

    # Upload Serverless package to S3
    - name: Upload Serverless package to S3
      run: |
        aws s3 cp ./serverless/.serverless/${{ github.sha }}.zip s3://${{ secrets.S3_BUCKET_NAME }}/${{ github.sha }}.zip
