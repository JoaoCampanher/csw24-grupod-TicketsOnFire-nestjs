name: Build, Push, and Deploy Latest Docker Image to ECR

on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:
  build-and-push:
    name: Build, Push, and Deploy Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: docker build -t nestjs-api:latest .

      - name: Tag Docker image for ECR
        env:
          ECR_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/nestjs-api
        run: docker tag nestjs-api:latest $ECR_URI

      - name: Push Docker Image to ECR
        env:
          ECR_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/nestjs-api
        run: docker push $ECR_URI

      - name: Check if ECS Service Exists
        id: check-ecs
        env:
          CLUSTER_NAME: nestjs-ecs-cluster
          SERVICE_NAME: nestjs-service
        run: |
          if ! aws ecs describe-services --cluster $CLUSTER_NAME --services $SERVICE_NAME; then
            echo "Service does not exist."
            echo "exists=false" >> $GITHUB_ENV
          else
            echo "Service exists."
            echo "exists=true" >> $GITHUB_ENV
          fi

      - name: Update ECS Service
        if: env.exists == 'true'
        env:
          CLUSTER_NAME: nestjs-ecs-cluster
          SERVICE_NAME: nestjs-service
          CONTAINER_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/nestjs-api:latest
        run: |
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --force-new-deployment
